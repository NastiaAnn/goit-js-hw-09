{"mappings":"AAAA,MAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,eAAgBF,SAASC,cAAc,sBACvCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,UAG/BH,EAAKM,KAAKC,iBAAiB,UAoB3B,SAA+BC,GAC7BA,EAAMC,iBAENC,EAASC,OAAOX,EAAKK,YAAYO,OACjCC,EAAaF,OAAOX,EAAKC,WAAWW,OACpCE,EAAYH,OAAOX,EAAKI,eAAeQ,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChCC,EAAcD,EAAGF,GACdI,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAE7DG,OAAM,EAACJ,SAAEA,EAAQC,MAAEA,MAClBC,QAAQC,IAAI,sBAAoBH,QAAeC,MAAU,IAG/DnB,EAAKM,KAAKiB,O,IAlCZ,IAAIb,EAAS,KACTG,EAAa,KACbC,EAAY,KAGhB,SAASE,EAAcE,EAAUC,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEP,E,MAAUC,IAEpBO,EAAO,C,SAAER,E,MAAUC,GAAQ,GAE3BN,GAAcC,EAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  delayStepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handlePromiseCreation);\n\nlet amount = null;\nlet firstDelay = null;\nlet delayStep = null;\n// function that creates and returns one promise\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, (firstDelay += delayStep));\n  });\n}\n\nfunction handlePromiseCreation(event) {\n  event.preventDefault();\n\n  amount = Number(refs.amountInput.value);\n  firstDelay = Number(refs.delayInput.value);\n  delayStep = Number(refs.delayStepInput.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  refs.form.reset();\n}\n"],"names":["$47d4ff9957288465$var$refs","delayInput","document","querySelector","delayStepInput","amountInput","form","addEventListener","event","preventDefault","$47d4ff9957288465$var$amount","Number","value","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","i","$47d4ff9957288465$var$createPromise","then","position","delay","console","log","catch","reset","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.9e3af75f.js.map"}