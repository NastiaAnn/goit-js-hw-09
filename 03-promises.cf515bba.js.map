{"mappings":"YAAA,IAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,eAAgBF,SAASC,cAAc,sBACvCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,UAG/BH,EAAKM,KAAKC,iBAAiB,UAoB3B,SAA+BC,GAC7BA,EAAMC,iBAENC,EAASC,OAAOX,EAAKK,YAAYO,OACjCC,EAAaF,OAAOX,EAAKC,WAAWW,OACpCE,EAAYH,OAAOX,EAAKI,eAAeQ,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChCC,EAAcD,EAAGF,GACdI,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBC,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE3DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBC,QAAQC,IAAI,sBAAqCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAG7DpB,EAAKM,KAAKmB,O,IAlCZ,IAAIf,EAAS,KACTG,EAAa,KACbC,EAAY,KAGhB,SAASE,EAAcG,EAAUC,GAC/B,OAAO,IAAIM,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAER,WAAUC,UAEpBQ,EAAO,CAAET,WAAUC,S,GAEnBP,GAAcC,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  delayStepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handlePromiseCreation);\n\nlet amount = null;\nlet firstDelay = null;\nlet delayStep = null;\n// function that creates and returns one promise\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, (firstDelay += delayStep));\n  });\n}\n\nfunction handlePromiseCreation(event) {\n  event.preventDefault();\n\n  amount = Number(refs.amountInput.value);\n  firstDelay = Number(refs.delayInput.value);\n  delayStep = Number(refs.delayStepInput.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  refs.form.reset();\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","delayInput","document","querySelector","delayStepInput","amountInput","form","addEventListener","event","preventDefault","$ce04d3a99e08e73b$var$amount","Number","value","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","delay","console","log","concat","catch","reset","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.cf515bba.js.map"}